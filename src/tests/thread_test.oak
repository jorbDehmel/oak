// A test of Oak's multi-threading file "std/threads.oak"
// Legacy passed

package!("std");
use_rule!("std");
include!("std/thread.oak");

let call() -> void
{
    let counter: i32;
    counter = 100;
    while (counter > 0)
    {
        print(counter);
        print("\n");

        counter -= 1;
    }
}

let mega_call() -> void
{
    let counter: i32;
    counter = 1000;
    while (counter > 0)
    {
        print(counter);
        print("\n");

        counter -= 1;
    }
}

let main() -> i32
{
    let a: thread;
    let b: thread;
    let c: thread;
    let d: thread;
    let e: thread;

    a.start(@call);
    b.start(@mega_call);
    c.start(@call);
    d.start(@call);
    e.start(@call);

    a.join();
    b.join();
    c.join();
    d.join();
    e.join();

    0
}
