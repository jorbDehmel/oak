// Testing of Oak's std_method rule (and rules in general)
// Legacy passed

package!("std");
use_rule!("std");

let times_two(self: ^i32) -> i32
{
    (^self * 2i32)
}

let times_two(self: i32) -> i32
{
    (self * 100i32)
}

let times(self: i32, other: i32, other_other: i32) -> i32
{
    (self * other * other_other)
}

let main() -> i32
{
    let a = 5i32;

    print(a.times_two());
    print("\n");

    print(a.times_two());
    print("\n");

    print(a.times(10i32, 10i32));
    print("\n");

    0i32
}
