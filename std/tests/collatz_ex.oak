/*
Collatz sequences in Oak
*/

package!("std");
use_rule!("std");
include!("std/math.oak");

// Takes in n_i and returns n_{i + 1}
let collatz(n: u128) -> u128
{
    let out = n;

    if n % 2u128 == 0u128
    {
        out /= 2u128;
    }
    else
    {
        out *= 3u128;
        ++out;
    }

    out
}

let print_collatz_sequence(n: u128) -> void
{
    print(n);
    print(" ");

    if n > 1u128
    {
        let next = collatz(n);
        print_collatz_sequence(next);
    }
    else
    {
        print("\n");
    }
}

let main() -> i32
{
    for (let i = 1u128; i < 10u128; ++i)
    {
        print_collatz_sequence(i);
    }

    0i32
}
