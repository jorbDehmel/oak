/*
Tests conditional macros in Oak.
*/

package!("std");

/*
If the file v[1] exists, output v[2]. Else if c == 4,
output v[3].
*/
let c::if_file_exists!(c: i32, v: [][]i8) -> i32
{
    include!(
        "std/io.oak",
        "std/sys.oak",
        "std/panic.oak"
    );

    assert!(c > 2i32);

    let exists: bool;
    exists = false;

    raw_c!(
        "#if (__has_include(<unistd.h>))\n"
        "#include <unistd.h>\n"
        "exists = (access(v[1], F_OK) != -1);\n"
        "#endif\n"
    );

    if (exists)
    {
        // File exists
        print(ptrarr!(v, 2u32));
    }
    else if (c == 4i32)
    {
        // File does not exist
        print(ptrarr!(v, 3i32));
    }

    0i32
}

let main() -> i32
{
    c::if_file_exists!(
        "foo.txt",
        {
            print("This file exists!\\n");
        },
        {
            print("This file does not exist...\\n");
        }
    );

    0i32
}
