/*
A few extra math functions, most of which simply interface w/
C.

Jordan Dehmel, 2024
jdehmel@outlook.com
*/

include!("std/rand.oak");
link!("extra/math.o");

// Returns a^b
let extra::pow(a: f64, b: f64) -> f64;

// Returns e^a
let extra::exp(a: f64) -> f64;

// Returns a random number x where min <= x <= max
let extra::f_rand(min: f64, max: f64) -> f64
{
    let base: f64;
    base = to_f64(rand()) / to_f64(to_i32(pow(2, 32)));
    base *= (max - min);
    (min + base)
}

// Returns true if the given value is in the range.
let extra::in_range(what: i128, min: i128, max: i128) -> bool
{
    return (min < what && what < max);
}

// Returns true if the given value is in the range.
let extra::in_range(what: f64, min: f64, max: f64) -> bool
{
    return (min < what && what < max);
}
